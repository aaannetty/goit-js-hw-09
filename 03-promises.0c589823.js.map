{"mappings":"gfAAA,IAAMA,EAAc,CAClBC,aAAcC,SAASC,cAAc,kBACrCC,YAAaF,SAASC,cAAc,iBACpCE,cAAeH,SAASC,cAAc,mBACtCG,UAAWJ,SAASC,cAAc,gBAClCI,YAAaL,SAASC,cAAc,U,aCAtC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACLN,EAEFI,EAAI,CAAEN,WAAUC,UAGhBM,EAAI,CAAEP,WAAUC,S,GAEjBA,E,IAuBPV,EAAYO,YAAYW,iBAAiB,UAnBpB,SAAAC,GACnBA,EAAEC,iBAKF,IAJA,IAAMC,EAASF,EAAEG,OAAOC,SAASF,OAAOG,MACpCC,EAAQC,OAAOP,EAAEG,OAAOC,SAASb,MAAMc,OACrCG,EAAOD,OAAOP,EAAEG,OAAOC,SAASI,KAAKH,OAElCI,EAAI,EAAGA,GAAKP,EAAQO,GAAK,EAChCpB,EAAcoB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAAC,OAAOC,QAAQ,sBAAqCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE3DyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAAC,OAAOI,QAAQ,qBAAoCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE7De,GAASE,EAEXR,EAAEG,OAAOe,O","sources":["src/js/refsPromise.js","src/js/03-promises.js"],"sourcesContent":["const refsPromise = {\n  promiseDelay: document.querySelector('[name=\"delay\"]'),\n  promiseStep: document.querySelector('[name=\"step\"]'),\n  promiseAmount: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('.form button'),\n  formPromise: document.querySelector('.form'),\n};\nexport { refsPromise };\n","import { refsPromise } from './refsPromise';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet currentDelay;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        res({ position, delay });\n      } else {\n        // Reject\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst onSubmitForm = e => {\n  e.preventDefault();\n  const amount = e.target.elements.amount.value;\n  let delay = Number(e.target.elements.delay.value);\n  const step = Number(e.target.elements.step.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  e.target.reset();\n};\n\nrefsPromise.formPromise.addEventListener('submit', onSubmitForm);\n"],"names":["$0c416e14ab8b366b$export$6ed5f6991ffb3d3f","promiseDelay","document","querySelector","promiseStep","promiseAmount","submitBtn","formPromise","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","addEventListener","e","preventDefault","amount","target","elements","value","delay1","Number","step","i","then","param","$h6c0i","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.0c589823.js.map"}